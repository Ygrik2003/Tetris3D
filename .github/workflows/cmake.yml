name: Test game on Windows and Ubuntu

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  ubuntu-build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: |
        sudo apt install ninja-build
        sudo apt-get install mesa-utils libglu1-mesa-dev freeglut3-dev mesa-common-dev
        git submodule init
        git submodule update
        cmake --preset CMakePresets.json --preset=ninja-release
        cmake --build --preset CMakePresets.json --preset=ninja-release

    - name: Gamse
      # Build your program with the given configuration
      run: ./build/ninja-release/src/99-game

   
  windows-build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3
    - uses: seanmiddleditch/gha-setup-ninja@master
    - uses: openrndr/setup-opengl@v1.1
    
    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: |
        git submodule init
        git submodule update
        cmake --preset CMakePresets.json --preset=ninja-release
        cmake --build --preset CMakePresets.json --preset=ninja-release

    - name: Tetris3D
      # Build your program with the given configuration
      run: ./build/ninja-release/src/99-game.exe      